<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 @(GraphWidth + 100) @GraphHeight">
    <g stroke="gray" text-anchor="end">
        <text x="40" y="@ZeroY">0</text>
        <text x="40" y="15">@Max</text>
        <line x1="50" x2="50" y1="0" y2="@GraphHeight"/>
        <line x1="50" x2="@(GraphWidth + 50)" y1="@ZeroY" y2="@ZeroY"/>
    </g>
    <g>
        <polyline stroke="blue" fill="none" points="@PointList"/>
    </g>

    @foreach (var (x, y) in Values.Select(value => (value.Item1, value.Item2)))
    {
        <circle cx=@(Xpos(x)) cy=@(Ypos(y)) r="1" fill="lightblue"/>
    }
</svg>

@code {
    [Parameter]
    public List<Tuple<double, double>> Values { get; set; } = new();
    
    private const double GraphHeight = 300.0;
    private const double GraphWidth = 500.0;
    
    private double Max => Values.Max(value => value.Item2);
    private double Min => Values.Min(value => value.Item2);
    
    private double GraphRange => Math.Abs(Max) + Math.Abs(Min);
    private double ZeroY => Math.Abs(Max) / GraphRange * GraphHeight;

    private double Xpos(double x)
    {
        return 50.0 + x * (GraphWidth / Values.Select(x => x.Item1).Max());
    }

    private double Ypos(double y)
    {
        return ZeroY - y * (GraphHeight / GraphRange);
    }

    // Convert Values to a list of coordinates for the polyline SVG element
    private string PointList =>
        string.Join(" ",
            Values.Select(
                (y) => $"{Xpos(y.Item1)},{Ypos(y.Item2)}"
                )
            );

}